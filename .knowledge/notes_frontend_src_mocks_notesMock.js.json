{"is_source_file": true, "format": "JavaScript", "description": "This file contains a mock implementation for note management, providing functions to list, get, create, update, and remove notes. It uses localStorage for data persistence and simulates asynchronous behavior with delays and failure chances.", "external_files": ["localStorage", "crypto"], "external_methods": ["crypto.randomUUID"], "published": ["notesMock"], "classes": [], "methods": [{"name": "list()", "description": "Returns a list of notes after a delay, possibly failing.", "scope": "notesMock", "scopeKind": "class"}, {"name": "get", "description": "Retrieves a specific note by ID after a delay, possibly failing."}, {"name": "create", "description": "Creates a new note with provided data, assigns ID and timestamps, saves it, and returns the new note."}, {"name": "update", "description": "Updates an existing note by ID with new data and timestamp, then saves and returns the updated note."}, {"name": "remove", "description": "Removes a note by ID and returns a success indicator."}], "calls": ["delay()", "maybeFail()", "load()", "save()", "crypto.randomUUID()"], "search-terms": ["notesMock", "localStorage", "mock API", "notes", "testing", "async functions", "JavaScript mock"], "state": 2, "file_id": 26, "knowledge_revision": 60, "git_revision": "", "ctags": [{"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^const STORAGE_KEY = 'notes_mock_items_v1';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "delay", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^const delay = (ms)=> new Promise(res=> setTimeout(res, ms));$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "failureRate", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^const failureRate = ()=> Number(process.env.REACT_APP_MOCK_FAILURE_RATE || 0);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async create(data){ await delay(200); maybeFail(); const items = load(); const now = Date.now(/", "language": "JavaScript", "kind": "property", "scope": "notesMock.item", "scopeKind": "class"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async update(id, data){ await delay(200); maybeFail(); const items = load(); const idx = items/", "language": "JavaScript", "kind": "constant", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "item", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async create(data){ await delay(200); maybeFail(); const items = load(); const now = Date.now(/", "language": "JavaScript", "kind": "class", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async create(data){ await delay(200); maybeFail(); const items = load(); const now = Date.now(/", "language": "JavaScript", "kind": "constant", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async remove(id){ await delay(150); maybeFail(); const items = load().filter(n=> String(n.id)!/", "language": "JavaScript", "kind": "constant", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async update(id, data){ await delay(200); maybeFail(); const items = load(); const idx = items/", "language": "JavaScript", "kind": "constant", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async list(){ await delay(250); maybeFail(); return load(); },$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "load", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^const load = ()=> {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "maybeFail", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^const maybeFail = ()=> { if(Math.random() < failureRate()) throw new Error('Mock failure'); };$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "notesMock", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^export const notesMock = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async create(data){ await delay(200); maybeFail(); const items = load(); const now = Date.now(/", "language": "JavaScript", "kind": "constant", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "save", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^const save = (items)=> localStorage.setItem(STORAGE_KEY, JSON.stringify(items));$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async update(id, data){ await delay(200); maybeFail(); const items = load(); const idx = items/", "language": "JavaScript", "kind": "constant", "scope": "notesMock", "scopeKind": "class"}], "hash": "db7ef67c84a2d6681c3a649adf1e3980", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/mocks/notesMock.js", "fields": [{"name": "async create(data){ await delay(200); maybeFail(); const items = load(); const now = Date.now(/", "scope": "notesMock.item", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"60": ""}]}