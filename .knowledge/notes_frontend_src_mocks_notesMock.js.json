{"is_source_file": true, "format": "JavaScript", "description": "This file contains mock implementations for notes data management, including functions for listing, retrieving, creating, updating, and removing notes, with simulated delay and failure for testing purposes.", "external_files": ["localStorage", "crypto"], "external_methods": ["localStorage.getItem", "localStorage.setItem", "JSON.parse", "JSON.stringify", "crypto.randomUUID", "setTimeout"], "published": ["notesMock"], "classes": [], "methods": [{"name": "list()", "description": "Asynchronously fetches the list of note items, with simulated delay and potential failure.", "scope": "notesMock", "scopeKind": "class"}, {"name": "get", "description": "Asynchronously retrieves a single note by ID."}, {"name": "create", "description": "Asynchronously creates a new note with provided data, assigns an ID and timestamps."}, {"name": "update", "description": "Asynchronously updates an existing note identified by ID with new data and updates timestamp."}, {"name": "remove", "description": "Asynchronously removes a note by ID."}], "calls": ["delay", "maybeFail", "load", "save", "localStorage.getItem", "localStorage.setItem", "JSON.parse", "JSON.stringify", "crypto.randomUUID", "Date.now"], "search-terms": ["notesMock", "localStorage", "mock", "notes", "CRUD", "async functions", "delay", "failure simulation"], "state": 2, "file_id": 26, "knowledge_revision": 79, "git_revision": "d6fb3a83f86590224262bac3b3cbbdb2e44f54ff", "revision_history": [{"60": ""}, {"79": "d6fb3a83f86590224262bac3b3cbbdb2e44f54ff"}], "ctags": [{"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^const STORAGE_KEY = 'notes_mock_items_v1';$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "delay", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^const delay = (ms)=> new Promise(res=> setTimeout(res, ms));$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "failureRate", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^const failureRate = ()=> Number(process.env.REACT_APP_MOCK_FAILURE_RATE || 0);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async create(data){ await delay(200); maybeFail(); const items = load(); const now = Date.now(/", "language": "JavaScript", "kind": "property", "scope": "notesMock.item", "scopeKind": "class"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async update(id, data){ await delay(200); maybeFail(); const items = load(); const idx = items/", "language": "JavaScript", "kind": "constant", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "item", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async create(data){ await delay(200); maybeFail(); const items = load(); const now = Date.now(/", "language": "JavaScript", "kind": "class", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async create(data){ await delay(200); maybeFail(); const items = load(); const now = Date.now(/", "language": "JavaScript", "kind": "constant", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async remove(id){ await delay(150); maybeFail(); const items = load().filter(n=> String(n.id)!/", "language": "JavaScript", "kind": "constant", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async update(id, data){ await delay(200); maybeFail(); const items = load(); const idx = items/", "language": "JavaScript", "kind": "constant", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async list(){ await delay(250); maybeFail(); return load(); },$/", "language": "JavaScript", "kind": "method", "signature": "()", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "load", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^const load = ()=> {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "maybeFail", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^const maybeFail = ()=> { if(Math.random() < failureRate()) throw new Error('Mock failure'); };$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "notesMock", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^export const notesMock = {$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async create(data){ await delay(200); maybeFail(); const items = load(); const now = Date.now(/", "language": "JavaScript", "kind": "constant", "scope": "notesMock", "scopeKind": "class"}, {"_type": "tag", "name": "save", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^const save = (items)=> localStorage.setItem(STORAGE_KEY, JSON.stringify(items));$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/note-management-system-28920-28984/notes_frontend/src/mocks/notesMock.js", "pattern": "/^  async update(id, data){ await delay(200); maybeFail(); const items = load(); const idx = items/", "language": "JavaScript", "kind": "constant", "scope": "notesMock", "scopeKind": "class"}], "hash": "db7ef67c84a2d6681c3a649adf1e3980", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/mocks/notesMock.js", "fields": [{"name": "async create(data){ await delay(200); maybeFail(); const items = load(); const now = Date.now(/", "scope": "notesMock.item", "scopeKind": "class", "description": "unavailable"}]}